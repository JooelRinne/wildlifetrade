#!/usr/bin/env python3

# Imports necessary libraries
import numpy as np
import pandas as pd
import re
import sys

# Defines a duplicate removal function
def remove_duplicates(x):
    y = x.split(', ')
    for item in y:
        if y.count(item) > 1:
            y.remove(item)
    return y

# Reads the .csv generated by "matches.py" script
try:
    df = pd.read_csv('matches.csv')
    df.fillna('')
except:
    print('File "matches.csv" not found, make sure that you have succesfully ran the previous script before running this script')
    sys.exit()

# Reads the list of species synonyms
synonyms = pd.read_csv('reptilesynonyms.csv')
synonyms = synonyms.fillna('')

# Creates empty data column for name of the species
df['Species'] = [[]] * df.shape[0]

# Iterate over the synonyms list
for col in synonyms.columns:
    # Find if which synonyms are mentioned in the df['keywords'] column and assign the right scientific names of the species to "df['Species']" data cell
    for index, row in synonyms.iterrows():
        df['Species'] = df.apply(lambda x: x['Species'] + [row['Reptile']] if (row[col] != '' and re.findall(row[col], str(x['keywords']))) else x['Species'], axis=1)

# Seperates different species mentioned in a data entry and remove duplicate names 
df['Species'] = df['Species'].apply(lambda x: ', '.join(set(x)))
df['Species'] = df['Species'].apply(lambda x: remove_duplicates(x))

# Creates a new datafield with same columns as the old one
new_df = pd.DataFrame(columns=df.columns)

# Iterrates the old dataframe rows, copy them to the new and split rows with more than one species mentioned so that each species have their own data entry
for index, row in df.iterrows():
    for i in range(len(row['Species'])):
        new_row = df.loc[[index],:]
        species = row['Species']
        new_row.Species = species[i]
        new_df = pd.concat((new_df, new_row)).sort_index()


#Saves the results to a .csv file
new_df.to_csv('reptiles_found.csv')